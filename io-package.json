{
    "common": {
        "name": "squeezeboxrpc",
        "version": "1.3.10",
        "news": {
            "1.3.10": {
                "en": "* getalbumartist as artist if setting of TPE2/TPE3 in LMS are changed"
            },
            "1.3.9": {
                "en": "* fix error with deleting favorites * fix wrong type for datapoint"
            },
            "1.3.8": {
                "en": "* fix object forward btn widget"
            },
            "1.3.7": {
                "en": "* fix object creation of states in player modul"
            },
            "1.3.6": {
                "en": "* fix object creation of states"
            },
            "1.3.5": {
                "en": "* fix object creation for favorites"
            },
            "1.3.4": {
                "en": "* fix object creation for favorites / * center widgets in sidebar"
            },
            "1.3.3": {
                "en": "* repair imageproxy for image datapoints of favorites"
            },
            "1.3.2": {
                "en": "* fix for Alarm contains only enabled Alarms"
            },
            "1.3.1": {
                "en": "* fix problem with git dependency url"
            },
            "1.3.0": {
                "en": "* fix problem wit setting own icon in player widget / * add infos about alarms to a player datapoint"
            }
        },
        "title": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol",
        "desc": {
            "en": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol",
            "de": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol",
            "ru": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol",
            "pt": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol",
            "nl": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol",
            "fr": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol",
            "it": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol",
            "es": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol",
            "pl": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol",
            "zh-cn": "SqueezeboxRPC: Controller for Logitech media Server over RPC-protokol"
        },
        "authors": [
            "oweitman <oweitman@gmx.de>"
        ],
        "keywords": [
            "ioBroker",
            "template",
            "Smart Home",
            "home automation"
        ],
        "license": "MIT",
        "platform": "Javascript/Node.js",
        "main": "squeezeboxrpc.js",
        "icon": "squeezeboxrpc.png",
        "enabled": true,
        "extIcon": "https://raw.githubusercontent.com/oweitman/ioBroker.squeezeboxrpc/master/admin/squeezeboxrpc.png",
        "readme": "https://github.com/oweitman/ioBroker.squeezeboxrpc/blob/master/README.md",
        "loglevel": "debug",
        "mode": "daemon",
        "type": "multimedia",
        "compact": true,
        "materialize": true,
        "connectionType":"local",
        "dataSource":"poll",
        "restartAdapters": [
            "vis"
        ],
        "dependencies": [
            {
                "admin": ">=3.0.0"
            },
            {
                "js-controller": ">=1.4.2"
            }
        ]
    },
    "native": {
        "server": "0.0.0.0",
        "port": 9000,
        "telnetport":9090,
        "username": "",
        "password": "",
        "serverrefresh": 30,
        "playerrefresh": 950,
        "favoriterefresh": 720,
        "discoveryrefresh": 30,
        "useplaylist": true,
        "usediscovery": true,
        "usetelnet": false,
        "usefavorites": true,
        "outputserverdebug": false,
        "outputserversilly": false,
        "outputplayerdebug": false,
        "outputplayersilly": false
    },
    "objects": [],
    "instanceObjects": [
        {
            "_id": "info",
            "type": "channel",
            "common": {
                "name": "Information"
            },
            "native": {}
        },
        {
            "_id": "info.connection",
            "type": "state",
            "common": {
                "role": "indicator.connected",
                "name": "Device or service connected",
                "type": "boolean",
                "read": true,
                "write": false,
                "def": false
            },
            "native": {}
        }
    ]
}